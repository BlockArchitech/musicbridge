name: musicbridge - New Release

on:
  workflow_dispatch:

jobs:
  build:
    name: Build and Release
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check schema
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
      - name: Build
        env:
          scheme: ${{ 'default' }}
        run: |
        
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild clean build analyze -derivedDataPath "." -scheme "$scheme" -"$filetype_parameter" "$file_to_build" | xcpretty && exit ${PIPESTATUS[0]}
      - name: Check Build Dir
        run: ls -r Build/Products/Debug
      - name: Auto-Create DMG
        run: |
          hdiutil create -format UDZO -srcfolder Build/Products/Debug/musicbridge.app rls/musicbridge-release.dmg
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: minor
          release_branches: swift
      - name: Get Sparkle Keyfile
        env:
          PRIVATE_SPARKLE_KEY: ${{ secrets.PRIVATE_SPARKLE_KEY }}
        run: |
          echo -n "$PRIVATE_SPARKLE_KEY" > sparkle_private_key
      - name: Update appcast
        run: |
          ./generate_appcast \
              --ed-key-file sparkle_private_key \
              --link https://github.com/znci/musicbridge/releases \
              --download-url-prefix https://github.com/znci/musicbridge/releases/download/v${{ steps.tag_version.outputs.new_tag }}/ \
              -o appcast.xml \
              rls/
      - name: Commit Appcast
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: |
            appcast.xml
          commit_message: "Release ${{ steps.tag_version.outputs.new_tag }}"
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          artifacts: "rls/musicbridge-release.dmg"
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          makeLatest: true
          generateReleaseNotes: true
          draft: false
          

