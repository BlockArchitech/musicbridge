name: musicbridge - New Beta Release

on:
  workflow_dispatch:

jobs:
  build:
    name: Build and Release
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Check schema
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
      - name: Build
        env:
          scheme: ${{ 'default' }}
        run: |
        
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild clean build analyze -derivedDataPath "." -scheme "$scheme" -"$filetype_parameter" "$file_to_build" | xcpretty && exit ${PIPESTATUS[0]}
      - name: Check Build Dir
        run: ls -r Build/Products/Debug
      - name: Auto-Create DMG
        run: |
          hdiutil create -format UDZO -srcfolder Build/Products/Debug/musicbridge.app musicbridge-release.dmg
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "musicbridge-release.dmg"
          body: "Release auto-generated by GitHub actions."
          makeLatest: true
          generateReleaseNotes: true
          commit: true
          draft: false
          prerelease: true
          

